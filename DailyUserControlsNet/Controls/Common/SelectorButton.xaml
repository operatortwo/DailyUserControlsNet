<UserControl x:Name="userControl" x:Class="SelectorButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DailyUserControlsNet"
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="120" Background="#FFE6E6E6" PreviewKeyDown="UserControl_PreviewKeyDown" MouseWheel="UserControl_MouseWheel" GotFocus="UserControl_GotFocus" LostFocus="UserControl_LostFocus" MouseDown="UserControl_MouseDown" ToolTip="{Binding Value, RelativeSource={RelativeSource Self}}" IsEnabledChanged="UserControl_IsEnabledChanged">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="Grid1" Margin="1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition MinWidth="25" Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Rectangle x:Name="FocusRect" Margin="-1" Grid.RowSpan="2" Grid.ColumnSpan="2" StrokeThickness="1"/>
        <Button x:Name="Button" Grid.RowSpan="2" Content="{Binding Text, ElementName=userControl}" BorderBrush="{Binding InnerBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" Style="{DynamicResource ButtonStyle1}" Padding="{Binding TextPadding, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" HorizontalContentAlignment="{Binding TextAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" />
        <RepeatButton x:Name="upBotton" Grid.Column="1" Click="upButton_Click" BorderBrush="{Binding InnerBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" Style="{DynamicResource RepeatButtonStyle1}" >
            <Path Data="M6.765,-3.2975501E-09 L13.53,10.333 0,10.333 z" Stretch="Uniform" Margin="0,2" Fill="Black"/>
        </RepeatButton>
        <RepeatButton x:Name="downButton" Grid.Column="1" Grid.Row="1" Click="downButton_Click" BorderBrush="{Binding InnerBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SelectorButton}}}" Style="{DynamicResource RepeatButtonStyle1}" >
            <Path Data="M6.7649999,-0.099792685 L13.03,9.164 0.5,9.164 z" Fill="Black" Stretch="Uniform" RenderTransformOrigin="0.5,0.5" Margin="0,2">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="180"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </RepeatButton>
    </Grid>
</UserControl>
